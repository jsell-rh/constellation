# Constellation - Registry Schema
# This defines the structure for registering librarians

# Schema version
version: "1.0"

# Root schema
type: object
required:
  - metadata
  - librarians
properties:
  metadata:
    type: object
    required:
      - version
      - lastUpdated
      - description
    properties:
      version:
        type: string
        pattern: '^\d+\.\d+$'
        description: "Schema version"
      lastUpdated:
        type: string
        format: date
        description: "Last update date"
      description:
        type: string
        description: "Registry description"
  
  librarians:
    type: array
    minItems: 1
    items:
      $ref: '#/definitions/librarian'
  
  config:
    $ref: '#/definitions/config'

# Definitions
definitions:
  librarian:
    type: object
    required:
      - id
      - name
      - description
      - endpoint
      - capabilities
    properties:
      id:
        type: string
        pattern: '^[a-z0-9-]+$'
        description: "Unique identifier (lowercase, alphanumeric, hyphens)"
        
      name:
        type: string
        description: "Human-readable name"
        
      description:
        type: string
        description: "What this librarian does"
        
      endpoint:
        type: string
        format: uri
        description: "HTTP(S) endpoint URL"
        
      type:
        type: string
        enum: [router, specialist, expert, emergency, location]
        description: "Librarian type"
        
      team:
        type: string
        description: "Owning team"
        
      parent:
        type: string
        description: "Parent librarian ID for hierarchy"
        
      capabilities:
        type: array
        minItems: 1
        items:
          type: string
          pattern: '^[a-z0-9.-]+$'
        description: "Hierarchical capabilities (e.g., 'kubernetes.operations.deployment')"
        
      data_sources:
        type: array
        items:
          $ref: '#/definitions/dataSource'
          
      delegates_to:
        type: array
        items:
          type: string
        description: "IDs of librarians this can delegate to"
        
      resilience:
        $ref: '#/definitions/resilience'
        
      sla:
        $ref: '#/definitions/sla'
        
      context:
        type: object
        additionalProperties: true
        description: "Additional context (e.g., location, timezone)"
        
      activation:
        $ref: '#/definitions/activation'

  dataSource:
    type: object
    required:
      - name
      - type
    properties:
      name:
        type: string
      type:
        enum: [api, database, filesystem, documentation, cache]
      url:
        type: string
        format: uri
      config:
        type: object
        additionalProperties: true
      refresh_rate:
        type: string
        pattern: '^(hourly|daily|weekly|realtime)$'

  resilience:
    type: object
    properties:
      circuit_breaker:
        $ref: '#/definitions/circuitBreaker'
      retry:
        $ref: '#/definitions/retry'
      timeout_ms:
        type: integer
        minimum: 100
        maximum: 60000
      fallback:
        type: array
        items:
          $ref: '#/definitions/fallback'

  circuitBreaker:
    type: object
    required:
      - error_threshold_percent
      - timeout_ms
      - reset_timeout_ms
    properties:
      enabled:
        type: boolean
        default: true
      error_threshold_percent:
        type: integer
        minimum: 1
        maximum: 100
      volume_threshold:
        type: integer
        minimum: 1
        default: 10
      timeout_ms:
        type: integer
        minimum: 100
      reset_timeout_ms:
        type: integer
        minimum: 1000

  retry:
    type: object
    properties:
      enabled:
        type: boolean
        default: true
      max_attempts:
        type: integer
        minimum: 1
        maximum: 10
        default: 3
      backoff_ms:
        type: integer
        minimum: 10
        default: 100
      backoff_multiplier:
        type: number
        minimum: 1.0
        default: 2.0

  fallback:
    type: object
    required:
      - type
    properties:
      type:
        enum: [cache, delegate, static, partial]
      config:
        type: object
        properties:
          ttl_minutes:
            type: integer
            minimum: 1
          to:
            type: string
          response:
            type: string

  sla:
    type: object
    properties:
      response_time_ms:
        type: integer
        minimum: 10
      availability:
        type: number
        minimum: 90
        maximum: 100
      throughput_rps:
        type: integer
        minimum: 1

  activation:
    type: object
    properties:
      keywords:
        type: array
        items:
          type: string
      priority:
        enum: [normal, high, critical]
      auto_escalate:
        type: boolean

  config:
    type: object
    properties:
      refresh_interval_minutes:
        type: integer
        minimum: 1
        default: 15
      default_timeout_ms:
        type: integer
        minimum: 100
        default: 5000
      max_delegation_depth:
        type: integer
        minimum: 1
        maximum: 20
        default: 10
      routing_ai_model:
        type: string
        default: "gpt-4"
      fallback_on_error:
        type: string
        description: "Default fallback librarian ID"
      health_check:
        type: object
        properties:
          enabled:
            type: boolean
            default: true
          interval_minutes:
            type: integer
            minimum: 1
            default: 5
          timeout_ms:
            type: integer
            minimum: 100
            default: 1000
          endpoint:
            type: string
            default: "/health"